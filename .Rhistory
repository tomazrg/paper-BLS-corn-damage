#facet_wrap(~price, labeller = as_labeller(custom_labels))+
theme_minimal_grid(font_size = 14) +
labs(
y = "Attainable yield (kg/ha)",
x = "Disease severity (%)",
fill = "L (USD/ha)"
)+
theme(text = element_text(size = 14),
axis.title = element_text(size = 20, face = "bold"),
strip.text = element_text(size= 14, vjust = -1),
#axis.text.y = element_text(hjust = -3),
axis.text.x = element_text(vjust = 3),
legend.position = "right",
legend.justification = 0.5,
panel.grid = element_blank())
hist_loss = ylmer_simu_min |>
filter(price == "200") %>%
ggplot(aes(loss))+
geom_histogram(color = "white", fill= "#1c1c3c", bins = 15)+
facet_wrap(~price)+
ggthemes::theme_few() +
scale_x_continuous(breaks = seq(0,2100, by = 300)) +
labs(
y = "Frequency",
x = "Economic losses (USD/ha)")+
theme(
text = element_text(face = "bold", size = 14),
axis.title = element_text(size = 20, face = "bold"),
axis.text.x = element_text(vjust = 1, size = 14, face = "bold"),
axis.text.y = element_text(vjust = 1, size = 14, face = "bold"),
legend.position = "none",
legend.justification = 0.5,
panel.grid = element_blank(),
strip.text = element_blank()
)
loss_200 = ylmer_simu_min |>
filter(price == "200")
median(loss_200$loss)
hist_loss = ylmer_simu_min %>%
filter(price == "200") %>%
ggplot(aes(x = loss)) +
stat_halfeye(fill = "#ffc425", alpha = 0.7)+
geom_vline(aes(xintercept = 447.6731), color = "#1c1c3c", linetype = "dashed", size = 2) +
ggthemes::theme_few() +
#scale_x_continuous(breaks = seq(0,2100, by = 100)) +
scale_x_continuous(breaks=c(50,150,250,350,450,550,
650,750,850,950,1050,
1150,1250,1350,1450,1550,1650,1750,1850,1950,
2150))+
labs(
y = "Density",
x = "Economic losses (USD/ha)")+
theme(
text = element_text(face = "bold", size = 14),
axis.title = element_text(size = 20, face = "bold"),
axis.text.x = element_text(vjust = 1, size = 14, face = "bold"),
axis.text.y = element_text(vjust = 1, size = 14, face = "bold"),
legend.position = "none",
legend.justification = 0.5,
panel.grid = element_blank(),
strip.text = element_blank()
)
library(ggdist)
sev  = data.frame(sev = seq(20,100, by = 10))
yield = data.frame(yld = seq(4000,12000,by = 500))
price = data.frame(price = seq(100,300, by = 100))
combined_data <- expand.grid(sev = sev$sev, yld = yield$yld, price = price$price)
ylmer_simu_min = combined_data %>%
mutate(loss =((((((49.3/9691.0)*sev)*100)*yld)/100)/1000)*price)
custom_labels <- c(
"100" = "100 USD/ton",
"200" = "200 USD/ton",
"300" = "300 USD/ton"
)
heat_loss =ylmer_simu_min %>%
filter(price == "200") %>%
ggplot(aes(sev,yld, fill = loss)) +
geom_tile(color = "white", size = 0.8) +
scale_x_continuous(breaks = seq(20, 100, by = 10)) +
scale_y_continuous(breaks = seq(4000, 12000, by = 500)) +
scale_fill_viridis_b(option = "E",
guide = guide_colorbar(barwidth = 0.3, barheight = 15),
breaks = seq(0, 2000, by = 300))+
geom_text(aes(label = as.integer(loss)),
size = 3, colour = "white")+
#facet_wrap(~price, labeller = as_labeller(custom_labels))+
theme_minimal_grid(font_size = 14) +
labs(
y = "Attainable yield (kg/ha)",
x = "Disease severity (%)",
fill = "L (USD/ha)"
)+
theme(text = element_text(size = 14),
axis.title = element_text(size = 20, face = "bold"),
strip.text = element_text(size= 14, vjust = -1),
#axis.text.y = element_text(hjust = -3),
axis.text.x = element_text(vjust = 3),
legend.position = "right",
legend.justification = 0.5,
panel.grid = element_blank())
hist_loss = ylmer_simu_min |>
filter(price == "200") %>%
ggplot(aes(loss))+
geom_histogram(color = "white", fill= "#1c1c3c", bins = 15)+
facet_wrap(~price)+
ggthemes::theme_few() +
scale_x_continuous(breaks = seq(0,2100, by = 300)) +
labs(
y = "Frequency",
x = "Economic losses (USD/ha)")+
theme(
text = element_text(face = "bold", size = 14),
axis.title = element_text(size = 20, face = "bold"),
axis.text.x = element_text(vjust = 1, size = 14, face = "bold"),
axis.text.y = element_text(vjust = 1, size = 14, face = "bold"),
legend.position = "none",
legend.justification = 0.5,
panel.grid = element_blank(),
strip.text = element_blank()
)
loss_200 = ylmer_simu_min |>
filter(price == "200")
median(loss_200$loss)
hist_loss = ylmer_simu_min %>%
filter(price == "200") %>%
ggplot(aes(x = loss)) +
stat_halfeye(fill = "#ffc425", alpha = 0.7)+
geom_vline(aes(xintercept = 447.6731), color = "#1c1c3c", linetype = "dashed", size = 2) +
ggthemes::theme_few() +
#scale_x_continuous(breaks = seq(0,2100, by = 100)) +
scale_x_continuous(breaks=c(50,150,250,350,450,550,
650,750,850,950,1050,
1150,1250,1350,1450,1550,1650,1750,1850,1950,
2150))+
labs(
y = "Density",
x = "Economic losses (USD/ha)")+
theme(
text = element_text(face = "bold", size = 14),
axis.title = element_text(size = 20, face = "bold"),
axis.text.x = element_text(vjust = 1, size = 14, face = "bold"),
axis.text.y = element_text(vjust = 1, size = 14, face = "bold"),
legend.position = "none",
legend.justification = 0.5,
panel.grid = element_blank(),
strip.text = element_blank()
)
# Below 25%
sev_loss_b25  = data.frame(sev = seq(5,25, by = 5))
combined_data_b25 <- expand.grid(sev = sev_loss_b25$sev, yld = yield$yld)
loss_25 = ((((((49.3/9691.0)*25)*combined_data_b25$sev)*combined_data_b25$yld)/100)/1000)*200
mean(loss_25)
min(loss_25)
max(loss_25)
# Above 25%
sev_loss_a25  = data.frame(sev = seq(25,100, by = 5))
combined_data_a25 <- expand.grid(sev = sev_loss_a25$sev, yld = yield$yld)
loss_25 = ((((((49.3/9691.0)*combined_data_a25$sev)*combined_data_a25$sev)*combined_data_a25$yld)/100)/1000)*200
mean(loss_25)
min(loss_25)
max(loss_25)
(hist_loss+heat_loss) +
plot_annotation(tag_levels = "a", tag_prefix = "(", tag_suffix = ")")&
theme(plot.tag = element_text(face = "bold", size = 24))
ggsave("fig/loss.png", bg = "white",
dpi = 600,height =8, width = 16)
lmer_slope= lmer_stats %>%
filter(parameters == "Slope")
library(minpack.lm)
Fx =environment(ecdf(-lmer_slope$estimate))$y
x = environment(ecdf(-lmer_slope$estimate))$x
slope_reg = nlsLM(Fx ~ pgamma(x, shape, rate,log = FALSE) ,
start = c(shape = 2.5, rate = 0.13),
control = nls.lm.control(maxiter = 1024))
summary(slope_reg)
shape_res = summary(slope_reg)$coef[1]
rate_res = summary(slope_reg)$coef[2]
ks.test(Fx, pgamma(x, shape_res, rate_res))
slope_plot = lmer_slope %>%
ggplot(aes(x = estimate)) +
geom_histogram(aes(y = ..density..), fill = "black", color = "white", bins = 20) + # Ajusta para densidade
stat_function(fun=function(x) dgamma(-x, shape_res, rate_res), size = 1.2, color = "darkblue")+
ggthemes::theme_few()+
#facet_wrap(~approach)+
labs(x = "Slope (kg/p.p)",
y = "Frequency")+
theme(text = element_text(size = 10, face = "bold"))
lmer_intercept= lmer_stats %>%
filter(parameters == "Intercept")
shapiro.test(lmer_slope$estimate)
mean_intercept = mean(lmer_intercept$estimate)
sd_intercept = sd(lmer_intercept$estimate)
intercept_plot <- lmer_intercept %>%
ggplot(aes(x = estimate)) +
geom_histogram(aes(y = ..density..), fill = "black", color = "white", bins = 20) + # Ajusta para densidade
stat_function(fun = dnorm, args = list(mean = mean_intercept, sd = sd_intercept),
color = "darkblue", size = 1.2, linetype = "solid")+
ggthemes::theme_few()+
#facet_wrap(~approach)+
labs(x = "Intercept (kg/ha)",
y = "Frequency")+
theme(text = element_text(size = 10, face = "bold"))
set.seed(1)
u_j <- rnorm(100, mean = 0, sd = random_effect_sd)
#mean_uj = mean(u_j)
df <- expand.grid(sev = seq(0, 100, by = 1), rep = 1:100)
df$yield = 9691.0 - 49.38*df$sev - rep(u_j, each = 101)
df$relative <- df$yield *100 / 9691.0
df2 = df %>%
group_by(sev) %>%
summarise(mean = mean(relative),
up_95 = quantile(relative, 0.975),
low_95 = quantile(relative, 0.025))
relative_plot = ggplot() +
geom_line(data = df, aes(x = sev, y = relative, group = rep),
color = "grey", alpha = 0.4) +  # Linhas cinzas para cada simulação
geom_line(data = df2, aes(x = sev, y = mean),
color = "black", size = 1.4) +  # Linha média
geom_line(data = df2, aes(x = sev, y = up_95),
color = "black", linetype = "dashed",size = 1) +  # IC superior
geom_line(data = df2, aes(x = sev, y = low_95),
color = "black", linetype = "dashed",size = 1) +  # IC inferior
scale_y_continuous(breaks = c(20,30, 40,50, 60,
70,80,90,100),
limits = c(20, 100),
expand = c(0, 2))+
scale_x_continuous(breaks = c(0,10,20,30,40,50,60,70,80,90, 100),
limits = c(0, 100),
expand = c(0, 2))+
coord_cartesian(xlim = c(0,100), ylim = c(20,100))+
labs(x = "Disease severity (%)", y = "Relative yield (%) ")+
geom_hline(yintercept = 87,
linetype = 2, color = "darkblue", size = 1)+
geom_vline(xintercept = c(25), linetype = 2, color = "darkblue", size = 1)+
ggthemes::theme_few()+
theme(text = element_text(size = 10, face = "bold"),
axis.text.x = element_text(size = 10, face = "bold"),
axis.text.y = element_text(size = 10, face = "bold"))
library(patchwork)
#plot_grid(slope_plot / intercept_plot | relative_plot, ncol = 1,
#         label_x = -0.02, label_size = 12)
(slope_plot / intercept_plot |relative_plot) +
plot_annotation(tag_levels = "a", tag_prefix = "(", tag_suffix = ")")&
theme(plot.tag = element_text(face = "bold", size = 12))
ggsave("fig/relative_parameters.png", bg = "white", dpi = 600,
height = 4, width = 6)
gera.norm.bid.geral<-function(tamanho.amostra,correlacao,m1,m2,sigma1,sigma2)
{
ro<-correlacao
n<-tamanho.amostra
x<-matrix(0,n,2)
for (i in 1:n)
{x[i,1]<-rnorm(1,m1,sigma1)
x[i,2]<-rnorm(1,m2+ro*sigma1/sigma2*(x[i,1]-m1),sigma2*(sqrt(1-ro^2)))
}
return(x)
}
gc()
estria2 %>%
ggplot(aes(mean_sev))+
geom_histogram(color= "white", fill = "black")+
ggthemes::theme_few()
library(minpack.lm)
sev = simulated_data_lmer$sev
#sev = estria2$mean_sev
Fx_sev = environment(ecdf(sev))$y
x_sev = environment(ecdf(sev))$x/100
summary(nlsLM(Fx_sev ~ pbeta(x_sev, shape1, shape2, log = FALSE) ,
start = c(shape1 = 1, shape2 = 1),
control = nls.lm.control(maxiter = 100000)))
ks.test(Fx_sev,pbeta(x_sev,1.2041125,3.6414300))
plot(x_sev,Fx_sev)
curve(pbeta(x, 1.2041125,3.6414300),0,1, add = T)
intercept_bls = regression_trial_m
intercept_bls[,1] = NULL
mean_intercept = mean(intercept_bls$Intercept)
sd_intercept = sd(intercept_bls$Intercept)
plot(ecdf(intercept_bls$Intercept))
curve(pnorm(x, mean_intercept,sd_intercept), add = T, col = "red")
Fx_res_b0 = environment(ecdf(intercept_bls$Intercept))$y
x_res_b0= environment(ecdf(intercept_bls$Intercept))$x
ks.test(Fx_res_b0, pnorm(x_res_b0, mean(intercept_bls$Intercept), sd(intercept_bls$Intercept)))
slope_bls = regression_trial_m
slope_bls[,2] = NULL
mean_slope = mean(slope_bls$Slope)
sd_slope = sd(slope_bls$Slope)
plot(ecdf(slope_bls$Slope))
curve(pnorm(x, mean_slope, sd_slope), add = T, col = "red")
library(minpack.lm)
Fx =environment(ecdf(-slope_bls$Slope))$y
x = environment(ecdf(-slope_bls$Slope))$x
slope_reg = nlsLM(Fx ~ pgamma(x, shape, rate,log = FALSE) ,
start = c(shape = 2.5, rate = 0.13),
control = nls.lm.control(maxiter = 1024))
summary(slope_reg)
shape = summary(slope_reg)$coef[1]
rate = summary(slope_reg)$coef[2]
Fx =environment(ecdf(-slope_bls$Slope))$y
x = environment(ecdf(-slope_bls$Slope))$x
ks.test(Fx, pgamma(x, shape, rate))
cor(regression_trial_m$Slope,regression_trial_m$Intercept)
j_res<-gera.norm.bid.geral(10000,0.15,0,0,1,1)
plot(j_res[,1],j_res[,2])
corn = gsheet2tbl("https://docs.google.com/spreadsheets/d/1LcLVKb6bW7tVaiu6reLsT8sjFR1hwUcembZ7uxAoBP8/edit?usp=sharing")
corn = corn %>%
filter(state %in% c("PR")) %>%
filter(year <= 2019)
bls_price = corn %>%
#filter(year <= 2019) %>%
mutate(price = (price/60)/4)
bls_price
min(bls_price$price)
mean(bls_price$price)
mean(bls_price$price)
median(bls_price$price)
sd(bls_price$price)
bls_price %>%
ggplot(aes(price))+
geom_histogram(fill = "steelblue", color = "white", bins = 10)+
ggthemes::theme_few()+
labs(x = "Soybean prince",
y = "Frequency")+
scale_x_continuous(breaks = seq(0,1,by=0.025))+
theme(text = element_text(size = 12, face = "bold"),
axis.title = element_text(size = 14, face = "bold"),
legend.position = "none")
hist((bls_price$price), prob = T)
curve(dnorm(x, mean(bls_price$price), sd(bls_price$price)),0.15,0.35, add = T)
plot(ecdf(bls_price$price))
curve(pnorm(x, mean(bls_price$price), sd(bls_price$price)),0.2,0.35, add = T)
mean(bls_price$price)
median(bls_price$price)
shapiro.test(bls_price$price)
Fx = environment(ecdf(bls_price$price))$y
x= environment(ecdf(bls_price$price))$x
ks.test(Fx, pnorm(x, mean(bls_price$price), sd(bls_price$price)))
plot(Fx, pnorm(x, mean(bls_price$price), sd(bls_price$price)))
price_plot = bls_price %>%
ggplot(aes(price))+
geom_histogram(aes(y = ..density..),bins = 10, color = "white", fill = "black")+ #"#1C8C20"
#stat_function(fun=function(x) dnorm(x, mean(sbr_price$price), sd(sbr_price$price)), color= "black", size = 1.2)+
ggthemes::theme_few()+
labs(x="Soybean price (USD/kg)", y = "Frequency")+
scale_x_continuous(breaks = seq(0,1,by=0.025))+
theme(text = element_text(size = 12, face = "bold"),
axis.title = element_text(size = 14, face = "bold"),
legend.position = "none")
price_plot
ggsave("fig/soybean_price.png", bg = "white",
dpi = 600, height = 5, width = 6)
#write_csv(big_one_df,"data/big_one_df.csv")
big_one_df = read_csv("data/big_one_df.csv")
sn = big_one_df %>%
ggplot(aes(sn))+
geom_histogram(color = "white", fill = "steelblue", bins = 10, alpha= .5)+
theme(text = element_text(face = "bold", size = 14),
axis.title = element_text(face = "bold",size = 16))+
labs(y = "Frequency",
x = "BLS severity (%)")+
ggthemes::theme_few()
gc()
b0_graphic = big_one_df %>%
ggplot(aes(b0))+
geom_histogram(color = "white", fill = "steelblue", bins = 10, alpha= .5)+
#scale_x_continuous(breaks = c(0,1000,2000,3000,4000,5000,6000,7000), limits = c(0, 7000))+
theme(text = element_text(face = "bold", size = 14),
axis.title = element_text(size = 16, face = "bold"))+
labs(y = "Frequency",
x = "Intercept (kg/ha)")+
ggthemes::theme_few()
gc()
b1_graphic = big_one_df %>%
ggplot(aes(b1))+
geom_histogram(color = "white", fill = "steelblue", bins = 10, alpha= .5)+
#scale_x_continuous(breaks = c(-100,-90,-80,-70,-60,-50,-40,-30,-20,-10,0), limits = c(-100,0))+
theme(text = element_text(face = "bold", size = 14),
axis.title = element_text(size = 16, face = "bold"))+
labs(y = "Frequency",
x = "Slope (kg/p.p.)")+
ggthemes::theme_few()
gc()
b1_graphic
alpha_graphic = big_one_df %>%
filter(C <= 180) %>%
filter(lambda >= 0.4) %>%
filter(lambda <= 0.8) %>%
filter(C >= 60) %>%
ggplot(aes(alfa))+
geom_histogram(color = "white", fill = "black", bins = 10)+
#scale_x_continuous(breaks = c(-2.0,-1.75,-1.50,-1.25,-1.00,-0.75,-0.50,-0.25,0.0), limits = c(-2.0,0.0))+
theme(text = element_text(face = "bold", size = 14),
axis.title = element_text(size = 16, face = "bold"))+
labs(y = "Frequency",
x = "Yield loss (%/p.p.)")+
ggthemes::theme_few()
gc()
alpha_graphic
alpha_graphic
big_one_df
#alpha_res_graphic,alpha_m_sus_graphic,alpha_sus_graphic,
plot_grid(sn_res_graphic,b0_res_graphic,b1_res_graphic, ncol = 3,  labels = c("(a)", "(b)", "(c)"),label_x = -0.03)
heat <- big_one_df %>%
filter(C <= 180) %>%
filter(lambda >= 0.4) %>%
filter(lambda <= 0.8) %>%
filter(C >= 15) %>%
group_by(lambda, C) %>%
summarise(n = n(), sumn = sum(profit), prob = sumn / n)
gc()
heat_graphic = heat %>%
ggplot(aes(as.factor(lambda * 100), as.factor(C), fill = prob)) +
geom_tile(size = 0.5, color = "white") +
scale_fill_viridis_b(option = "D", direction = -1) +
scale_color_manual(values = c("#E60E00", "#55E344")) +
guides(color = guide_legend(override.aes = list(size = 2))) +
labs(x = "Fungicide efficacy (%)",
y = "Fungicide + Application cost ($)",
fill = "Pr(I \u2265 C)",
color = "") +
# facet_wrap(vars(class, class2)) +
ggthemes::theme_few()+
theme(strip.text = element_text(face = "bold", size = 14),
text = element_text(face = "bold", size = 14))
gc()
big = big_one_df %>%
mutate(class = case_when(sn > 0.25 ~ "High severity",
sn <= 0.25 ~"Low severity"))
class <- big %>%
filter(C <= 105) %>%
filter(lambda >= 0.4) %>%
filter(lambda <= 0.8) %>%
filter(C >= 15) %>%
group_by(lambda, C, class) %>%
summarise(n = n(), sumn = sum(profit), prob = sumn / n, .groups = 'drop') %>%
ungroup()
gc()
library(viridis)
heat_graphic = class %>%
filter(!is.na(class)) %>%
ggplot( aes(as.factor(lambda * 100), as.factor(C), fill = prob)) +
geom_tile(size = 0.5, color = "white") +
#geom_text(aes(label = paste(round(prob, 2), sep = "")),
# size = 4, colour = "white")+
scale_fill_viridis_b(option = "E", direction =  -1)+
#scale_fill_viridis(discrete = T, option = "E") +
guides(color = guide_legend(override.aes = list(size = 2))) +
labs(x = "Treatment efficacy (%)",
y = "Treatment cost (USD/ha)",
fill = "Pr(I \u2265 C)",
color = "") +
facet_wrap(vars(class), ncol =1) +
ggthemes::theme_few()+
theme(strip.text = element_text(face = "bold", size = 14),
text = element_text(face = "bold", size = 14),
legend.position = "right")
gc()
low_class = class %>%
filter(class == "Low severity")
min(low_class$prob)
max(low_class$prob)
mean(low_class$prob)
low_class %>%
filter(C <= 15)
high_class = class %>%
filter(class == "High severity")
min(high_class$prob)
max(high_class$prob)
mean(high_class$prob)
overall = big %>%
filter(C <= 105) %>%
filter(C >= 15) %>%
#mutate(sev_class = " Overall") %>%
dplyr::group_by(lambda,class) %>%
summarise(yield_gain_median = median(yield_gain),
yield_gain_mean = mean(yield_gain),
up_95 = quantile(yield_gain, 0.975),
low_95 = quantile(yield_gain, 0.025),
up_75 = quantile(yield_gain, 0.75),
low_75 = quantile(yield_gain, 0.25))
gain_graphic = overall %>%
ggplot(aes(lambda*100,yield_gain_mean))+
geom_line(aes(lambda*100, low_95),
linetype = 2,
size = 1,
fill = NA, color = "black")+
geom_line(aes(lambda*100, up_95),
linetype = 2,
size = 1,
fill = NA,color = "black")+
geom_line(size = 1.4, aes(lambda*100,yield_gain_median), color = "#ffc425")+
#scale_y_continuous(breaks = c(0, 500, 1000, 1500,2000,
#                             2500, 3000),
#                 limits = c(0, 3000))+
#scale_x_continuous(breaks = c(40,50,60,70,80), limits = c(40, 80))+
#scale_color_viridis_d()+
#scale_color_manual(values = c('steelblue', '#9ccb86', 'darkred'))+
ggthemes::theme_few()+
facet_wrap(~class, ncol = 1)+
#facet_wrap(~class+class2)+
labs(x = "Treatment efficacy (%)",
y = "Yield difference (kg/ha)",
color = "Tolerance level",
linetype = "", fill = "")+
theme(text = element_text(face = "bold", size = 14),
strip.text = element_text(size = 14),
legend.position = "top")
library(cowplot)
(gain_graphic+heat_graphic) +
plot_annotation(tag_levels = "a", tag_prefix = "(", tag_suffix = ")")&
theme(plot.tag = element_text(face = "bold", size = 16))
ggsave("fig/break-even_gain.png", dpi = 600, bg = "white",
width = 8, height = 6)
